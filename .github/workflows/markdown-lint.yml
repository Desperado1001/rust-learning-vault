name: 📝 Markdown Lint

on:
  # Run on push to main branch
  push:
    branches:
      - main
    paths:
      - '**.md'

  # Run on pull requests
  pull_request:
    paths:
      - '**.md'

  # Allow manual trigger
  workflow_dispatch:

jobs:
  markdown-lint:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📝 Run Markdown Linter
        uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          globs: |
            **/*.md
            !**/node_modules/**
            !**/.obsidian/**

      - name: 📋 Lint Report
        if: failure()
        run: |
          echo "❌ Markdown linting failed!"
          echo "Please fix the formatting issues in your Markdown files."
          echo ""
          echo "Common issues to check:"
          echo "  - Consistent heading styles"
          echo "  - No trailing spaces"
          echo "  - Proper list formatting"
          echo "  - No duplicate headings"
          echo "  - Proper link formatting"

  markdown-style-check:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Check for Common Issues
        run: |
          echo "🔍 Checking for common Markdown issues..."

          # Check for trailing whitespace
          echo "Checking for trailing whitespace..."
          if grep -r --include="*.md" ' $' .; then
            echo "❌ Found trailing whitespace in Markdown files"
            exit 1
          else
            echo "✅ No trailing whitespace found"
          fi

          # Check for mixed line endings
          echo "Checking for consistent line endings..."
          if find . -name "*.md" -exec file {} \; | grep -i "crlf" | grep -v ".git"; then
            echo "⚠️ Found CRLF line endings (this is OK on Windows)"
          else
            echo "✅ Line endings are consistent"
          fi

          # Check for TODO/FIXME comments
          echo "Checking for TODO/FIXME comments..."
          if grep -r --include="*.md" -i "TODO\|FIXME" . | grep -v ".git" | grep -v "CHANGELOG.md"; then
            echo "ℹ️ Found TODO/FIXME comments (informational only)"
          fi

          echo "✅ Style check completed"

  markdown-link-format:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔗 Check Link Formats
        run: |
          echo "🔗 Checking Markdown link formats..."

          # Check for malformed wikilinks
          echo "Checking for malformed wikilinks..."
          if grep -r --include="*.md" '\[\[[^]]*\]' . | grep -v "\[\[[^]]*\]\]" | grep -v ".git"; then
            echo "❌ Found malformed wikilinks"
            grep -r --include="*.md" '\[\[[^]]*\]' . | grep -v "\[\[[^]]*\]\]" | grep -v ".git"
            exit 1
          else
            echo "✅ All wikilinks are properly formatted"
          fi

          # Check for empty links
          echo "Checking for empty links..."
          if grep -r --include="*.md" '\[\]([^)]*)' . | grep -v ".git"; then
            echo "❌ Found empty link text"
            grep -r --include="*.md" '\[\]([^)]*)' . | grep -v ".git"
            exit 1
          else
            echo "✅ No empty links found"
          fi

          echo "✅ Link format check completed"

  summary:
    runs-on: ubuntu-latest
    needs: [markdown-lint, markdown-style-check, markdown-link-format]
    if: always()

    steps:
      - name: 📊 Generate Summary
        run: |
          echo "## 📝 Markdown Quality Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.markdown-lint.result }}" == "success" ]; then
            echo "✅ **Markdown Lint**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Markdown Lint**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.markdown-style-check.result }}" == "success" ]; then
            echo "✅ **Style Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Style Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.markdown-link-format.result }}" == "success" ]; then
            echo "✅ **Link Format Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Link Format Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "For more information, see the [Contributing Guide](CONTRIBUTING.md)." >> $GITHUB_STEP_SUMMARY
